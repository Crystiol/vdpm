/* osgVdpm - View-dependent progressive meshes for OpenSceneGraph
* Copyright 2015 Jim Tan
* https://github.com/kctan0805/vdpm
*
* osgEarth is free software; you can redistribute it and/or modify
* it under the terms of the GNU Lesser General Public License as published by
* the Free Software Foundation; either version 2 of the License, or
* (at your option) any later version.
*
* This program is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
* GNU Lesser General Public License for more details.
*
* You should have received a copy of the GNU Lesser General Public License
* along with this program.  If not, see <http://www.gnu.org/licenses/>
*/
#ifndef OSGVDPM_SRMESHDRAWABLE
#define OSGVDPM_SRMESHDRAWABLE 1

#include <osg/Drawable>

namespace osgVdpm {

class vdpm::SRMesh;

class OSG_EXPORT SRMeshDrawable : public osg::Drawable
{
    public:

        SRMeshDrawable();

        /** Copy constructor using CopyOp to manage deep vs shallow copy.*/
        SRMeshDrawable(const SRMeshDrawable& srmeshdrawable, const osg::CopyOp& copyop = osg::CopyOp::SHALLOW_COPY);

        META_Object(osgVdpm, SRMeshDrawable);

        virtual void drawImplementation(osg::RenderInfo& renderInfo) const;

        virtual osg::BoundingSphere computeBound() const;
        virtual osg::BoundingBox computeBoundingBox() const;

        void setSRMesh(vdpm::SRMesh* srmesh) { this->srmesh = srmesh; }
        vdpm::SRMesh* getSRMesh() const { return srmesh; }

    protected:

        SRMeshDrawable& operator = (const SRMeshDrawable&) { return *this;}

        virtual ~SRMeshDrawable();

    private:

        enum RealizeStatus {
            NOT_REALIZED = 0,
            REALIZING,
            REALIZED
        };

        vdpm::SRMesh* srmesh;
        mutable vdpm::Viewport* viewport;
        mutable RealizeStatus status;
};

}

#endif
